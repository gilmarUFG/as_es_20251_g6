@startuml Nível 4 - Sequência de Detecção de Riscos
actor Usuario
participant "ControllerSolicitacaoVeiculo" as SCV
participant "ServiceSolicitacaoVeiculo" as SSV
participant "ServiceRotas" as SR
participant "ServiceGeoposicionamento" as SG
database "Postgres" as BD

Usuario -> SCV: solicitarCorrida(localizacaoInicial, localizacaoFinal)
activate SCV
SCV -> SSV: solicitarCorrida(localizacaoInicial, localizacaoFinal)
activate SSV
SSV -> SR: calcularRota(localizacaoInicial, localizacaoFinal)
activate SR

SR -> SG: obterVeiculoProximo(localizacaoInicial, localizacaoFinal)
activate SG
alt localizacaoInicial == localizacaoDestino
    SG --> SR: **Erro**

else localizacaoInicial != localizacaoDestino
    activate BD
    SG -> BD: buscarVeiculosMaisProximos(localizacaoInicial)
    BD --> SG: Veículos próximos ao usuário
    deactivate BD
    SG -> SG: calcularDistanciaUsuarioVeiculosProximos(localizacaoInicial, localizacaoFinal)
    SG --> SR: Veículo mais próximo
    deactivate SG
    SR -> SR: calcularMelhorRota(localizacaoInicial, localizacaoFinal)
    SR --> SSV: Melhor rota
    deactivate SR
    SSV --> SCV: Melhor rota
    SCV --> Usuario: Rota disponível para visualização do usuário
    deactivate SG
    Usuario -> SCV: confirmarCorrida(viagem)
    SCV -> SSV: confirmarCorrida(viagem)
    activate BD
    SSV -> BD: criarRegistroCorrida(viagem)
    deactivate BD
    deactivate SSV
end
deactivate SR
deactivate SCV
deactivate SSV
@enduml